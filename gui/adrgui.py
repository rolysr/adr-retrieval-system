# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ADRGui.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import time
from PyQt5 import QtCore, QtGui, QtWidgets
from adr_retrieval_system import AdrRetrievalSystem
from retrieval_models.boolean_model.boolean_model import BooleanModel
from retrieval_models.generalized_vector_space_model.generalized_vector_space_model import GeneralizedVectorSpaceModel
from retrieval_models.vector_space_model.vector_space_model import VectorSpaceModel
from utils.crawler import Crawler
from utils.preprocessor import Preprocessor
from utils.query_expansion import query_expansion_by_synonyms


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1259, 697)
        MainWindow.setMinimumSize(QtCore.QSize(1259, 697))
        MainWindow.setMaximumSize(QtCore.QSize(1259, 697))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.ADRGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.ADRGroupBox.setGeometry(QtCore.QRect(20, 20, 1221, 641))
        self.ADRGroupBox.setObjectName("ADRGroupBox")
        self.searchBar = QtWidgets.QLineEdit(self.ADRGroupBox)
        self.searchBar.setGeometry(QtCore.QRect(10, 70, 541, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.searchBar.setFont(font)
        self.searchBar.setText("")
        self.searchBar.setObjectName("searchBar")
        self.searchButton = QtWidgets.QPushButton(self.ADRGroupBox)
        self.searchButton.setGeometry(QtCore.QRect(560, 70, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.searchButton.setFont(font)
        self.searchButton.setObjectName("searchButton")
        self.responseSizeGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.responseSizeGroupBox.setGeometry(QtCore.QRect(440, 240, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.responseSizeGroupBox.setFont(font)
        self.responseSizeGroupBox.setObjectName("responseSizeGroupBox")
        self.noDocsSpinBox = QtWidgets.QSpinBox(self.responseSizeGroupBox)
        self.noDocsSpinBox.setGeometry(QtCore.QRect(110, 40, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.noDocsSpinBox.setFont(font)
        self.noDocsSpinBox.setObjectName("noDocsSpinBox")
        self.label_4 = QtWidgets.QLabel(self.responseSizeGroupBox)
        self.label_4.setGeometry(QtCore.QRect(20, 40, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.searchResultsGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.searchResultsGroupBox.setGeometry(QtCore.QRect(10, 110, 411, 491))
        self.searchResultsGroupBox.setObjectName("searchResultsGroupBox")
        self.searchResultsTable = QtWidgets.QTableWidget(self.searchResultsGroupBox)
        self.searchResultsTable.setGeometry(QtCore.QRect(10, 50, 381, 431))
        self.searchResultsTable.setObjectName("searchResultsTable")
        self.searchResultsTable.setColumnCount(3)
        self.searchResultsTable.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.searchResultsTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.searchResultsTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.searchResultsTable.setHorizontalHeaderItem(2, item)
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.searchResultsTable.setFont(font)
        self.responseTimeGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.responseTimeGroupBox.setGeometry(QtCore.QRect(620, 240, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.responseTimeGroupBox.setFont(font)
        self.responseTimeGroupBox.setObjectName("responseTimeGroupBox")
        self.responseTimeLabel = QtWidgets.QLabel(self.responseTimeGroupBox)
        self.responseTimeLabel.setGeometry(QtCore.QRect(20, 40, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.responseTimeLabel.setFont(font)
        self.responseTimeLabel.setObjectName("responseTimeLabel")
        self.modelGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.modelGroupBox.setGeometry(QtCore.QRect(440, 110, 351, 111))
        self.modelGroupBox.setObjectName("modelGroupBox")
        self.modelComboBox = QtWidgets.QComboBox(self.modelGroupBox)
        self.modelComboBox.setGeometry(QtCore.QRect(10, 60, 331, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.modelComboBox.setFont(font)
        self.modelComboBox.setObjectName("modelComboBox")
        self.modelComboBox.addItem("")
        self.modelComboBox.addItem("")
        self.modelComboBox.addItem("")
        self.datasetGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.datasetGroupBox.setGeometry(QtCore.QRect(810, 110, 391, 261))
        self.datasetGroupBox.setObjectName("datasetGroupBox")
        self.offlineDatasetsComboBox = QtWidgets.QComboBox(self.datasetGroupBox)
        self.offlineDatasetsComboBox.setGeometry(QtCore.QRect(140, 70, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.offlineDatasetsComboBox.setFont(font)
        self.offlineDatasetsComboBox.setObjectName("offlineDatasetsComboBox")
        self.offlineDatasetsComboBox.addItem("")
        self.offlineDatasetsComboBox.addItem("")
        self.offlineDatasetsComboBox.addItem("")
        self.offlineRadioButton = QtWidgets.QRadioButton(self.datasetGroupBox)
        self.offlineRadioButton.setGeometry(QtCore.QRect(20, 70, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.offlineRadioButton.setFont(font)
        self.offlineRadioButton.setObjectName("offlineRadioButton")
        self.onlineRadioButton = QtWidgets.QRadioButton(self.datasetGroupBox)
        self.onlineRadioButton.setGeometry(QtCore.QRect(20, 130, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.onlineRadioButton.setFont(font)
        self.onlineRadioButton.setObjectName("onlineRadioButton")
        self.crawlerGroupBox = QtWidgets.QGroupBox(self.datasetGroupBox)
        self.crawlerGroupBox.setGeometry(QtCore.QRect(110, 130, 271, 121))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.crawlerGroupBox.setFont(font)
        self.crawlerGroupBox.setObjectName("crawlerGroupBox")
        self.urlCrawlerLineEdit = QtWidgets.QLineEdit(self.crawlerGroupBox)
        self.urlCrawlerLineEdit.setGeometry(QtCore.QRect(50, 40, 211, 22))
        font = QtGui.QFont()
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.urlCrawlerLineEdit.setFont(font)
        self.urlCrawlerLineEdit.setObjectName("urlCrawlerLineEdit")
        self.label_2 = QtWidgets.QLabel(self.crawlerGroupBox)
        self.label_2.setGeometry(QtCore.QRect(10, 40, 31, 21))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.crawlerGroupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 80, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.noPagesCrawlerSpinBox = QtWidgets.QSpinBox(self.crawlerGroupBox)
        self.noPagesCrawlerSpinBox.setGeometry(QtCore.QRect(110, 90, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.noPagesCrawlerSpinBox.setFont(font)
        self.noPagesCrawlerSpinBox.setObjectName("noPagesCrawlerSpinBox")
        self.metricsGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.metricsGroupBox.setGeometry(QtCore.QRect(440, 320, 351, 281))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.metricsGroupBox.setFont(font)
        self.metricsGroupBox.setObjectName("metricsGroupBox")
        self.metricsButton = QtWidgets.QPushButton(self.metricsGroupBox)
        self.metricsButton.setGeometry(QtCore.QRect(10, 30, 161, 41))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.metricsButton.setFont(font)
        self.metricsButton.setObjectName("metricsButton")
        self.precisionLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.precisionLabel.setGeometry(QtCore.QRect(170, 90, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.precisionLabel.setFont(font)
        self.precisionLabel.setObjectName("precisionLabel")
        self.recallLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.recallLabel.setGeometry(QtCore.QRect(170, 120, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.recallLabel.setFont(font)
        self.recallLabel.setObjectName("recallLabel")
        self.fscoreLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.fscoreLabel.setGeometry(QtCore.QRect(170, 150, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.fscoreLabel.setFont(font)
        self.fscoreLabel.setObjectName("fscoreLabel")
        self.f1scoreLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.f1scoreLabel.setGeometry(QtCore.QRect(170, 180, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.f1scoreLabel.setFont(font)
        self.f1scoreLabel.setObjectName("f1scoreLabel")
        self.rprecisionLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.rprecisionLabel.setGeometry(QtCore.QRect(170, 210, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.rprecisionLabel.setFont(font)
        self.rprecisionLabel.setObjectName("rprecisionLabel")
        self.label_10 = QtWidgets.QLabel(self.metricsGroupBox)
        self.label_10.setGeometry(QtCore.QRect(20, 90, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.RRSpinBox = QtWidgets.QSpinBox(self.metricsGroupBox)
        self.RRSpinBox.setGeometry(QtCore.QRect(70, 90, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.RRSpinBox.setFont(font)
        self.RRSpinBox.setObjectName("RRSpinBox")
        self.label_11 = QtWidgets.QLabel(self.metricsGroupBox)
        self.label_11.setGeometry(QtCore.QRect(20, 130, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.RECSpinBox = QtWidgets.QSpinBox(self.metricsGroupBox)
        self.RECSpinBox.setGeometry(QtCore.QRect(70, 130, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.RECSpinBox.setFont(font)
        self.RECSpinBox.setObjectName("RECSpinBox")
        self.label_12 = QtWidgets.QLabel(self.metricsGroupBox)
        self.label_12.setGeometry(QtCore.QRect(20, 170, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.RELSpinBox = QtWidgets.QSpinBox(self.metricsGroupBox)
        self.RELSpinBox.setGeometry(QtCore.QRect(70, 170, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.RELSpinBox.setFont(font)
        self.RELSpinBox.setObjectName("RELSpinBox")
        self.label_13 = QtWidgets.QLabel(self.metricsGroupBox)
        self.label_13.setGeometry(QtCore.QRect(20, 210, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.RRDSpinBox = QtWidgets.QSpinBox(self.metricsGroupBox)
        self.RRDSpinBox.setGeometry(QtCore.QRect(70, 210, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft Sans Serif")
        font.setPointSize(9)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.RRDSpinBox.setFont(font)
        self.RRDSpinBox.setObjectName("RRDSpinBox")
        self.noveltyRatioLabel = QtWidgets.QLabel(self.metricsGroupBox)
        self.noveltyRatioLabel.setGeometry(QtCore.QRect(170, 240, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.noveltyRatioLabel.setFont(font)
        self.noveltyRatioLabel.setObjectName("noveltyRatioLabel")
        self.queryExpansionGroupBox = QtWidgets.QGroupBox(self.ADRGroupBox)
        self.queryExpansionGroupBox.setGeometry(QtCore.QRect(810, 370, 381, 151))
        self.queryExpansionGroupBox.setObjectName("queryExpansionGroupBox")
        self.getBetterQueryButton = QtWidgets.QPushButton(self.queryExpansionGroupBox)
        self.getBetterQueryButton.setGeometry(QtCore.QRect(10, 50, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.getBetterQueryButton.setFont(font)
        self.getBetterQueryButton.setObjectName("getBetterQueryButton")
        self.queryExpandedLineEdit = QtWidgets.QLineEdit(self.queryExpansionGroupBox)
        self.queryExpandedLineEdit.setGeometry(QtCore.QRect(10, 100, 361, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        self.queryExpandedLineEdit.setFont(font)
        self.queryExpandedLineEdit.setText("")
        self.queryExpandedLineEdit.setObjectName("queryExpandedLineEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.ADRGroupBox.setTitle(_translate("MainWindow", "ADR Information Recovery System"))
        self.searchButton.setText(_translate("MainWindow", "Search"))
        self.responseSizeGroupBox.setTitle(_translate("MainWindow", "Response Size"))
        self.label_4.setText(_translate("MainWindow", "No. Docs:"))
        self.searchResultsGroupBox.setTitle(_translate("MainWindow", "Search Results"))
        item = self.searchResultsTable.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Id"))
        item = self.searchResultsTable.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Sim"))
        item = self.searchResultsTable.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Location"))
        self.responseTimeGroupBox.setTitle(_translate("MainWindow", "Response Time"))
        self.responseTimeLabel.setText(_translate("MainWindow", "0 secs"))
        self.modelGroupBox.setTitle(_translate("MainWindow", "Model"))
        self.modelComboBox.setItemText(0, _translate("MainWindow", "Vector Space Model"))
        self.modelComboBox.setItemText(1, _translate("MainWindow", "Boolean Model"))
        self.modelComboBox.setItemText(2, _translate("MainWindow", "Generalized Vector Space Model"))
        self.datasetGroupBox.setTitle(_translate("MainWindow", "Datasets"))
        self.offlineDatasetsComboBox.setItemText(0, _translate("MainWindow", "Cranfield"))
        self.offlineDatasetsComboBox.setItemText(1, _translate("MainWindow", "Reuters"))
        self.offlineDatasetsComboBox.setItemText(2, _translate("MainWindow", "20-Newsgroups"))
        self.offlineRadioButton.setText(_translate("MainWindow", "Offline"))
        self.onlineRadioButton.setText(_translate("MainWindow", "Online"))
        self.crawlerGroupBox.setTitle(_translate("MainWindow", "Crawler"))
        self.label_2.setText(_translate("MainWindow", "Url:"))
        self.label_3.setText(_translate("MainWindow", "No. Pages:"))
        self.metricsGroupBox.setTitle(_translate("MainWindow", "Metrics"))
        self.metricsButton.setText(_translate("MainWindow", "Calculate Metrics"))
        self.precisionLabel.setText(_translate("MainWindow", "Precision:"))
        self.recallLabel.setText(_translate("MainWindow", "Recall:"))
        self.fscoreLabel.setText(_translate("MainWindow", "F-Score:"))
        self.f1scoreLabel.setText(_translate("MainWindow", "F1-Score:"))
        self.rprecisionLabel.setText(_translate("MainWindow", "R-Precision:"))
        self.label_10.setText(_translate("MainWindow", "RR:"))
        self.label_11.setText(_translate("MainWindow", "REC:"))
        self.label_12.setText(_translate("MainWindow", "REL:"))
        self.label_13.setText(_translate("MainWindow", "RRD:"))
        self.noveltyRatioLabel.setText(_translate("MainWindow", "Novelty Ratio:"))
        self.queryExpansionGroupBox.setTitle(_translate("MainWindow", "Query Expansion"))
        self.getBetterQueryButton.setText(_translate("MainWindow", "Get Better Query"))

        # set min value to 1 in docs and pages spin boxes
        self.noDocsSpinBox.setMinimum(1)
        self.noPagesCrawlerSpinBox.setMinimum(1)

        # connect button's click event to the correspondig function
        self.searchButton.clicked.connect(self.search_button)
        self.metricsButton.clicked.connect(self.calculate_metrics_button)
        self.getBetterQueryButton.clicked.connect(self.expand_query_button)

    def init_backend(self):
        """
            This method creates instances of ADR systems in order to use
            the Gui. This method is supposed to be called before Main Window shows
            on screen
        """
        # get all offline corpuses
        cranfield_corpus = Preprocessor("./datasets/cranfield").generate_preprocessed_documents()
        reuters_corpus = Preprocessor("./datasets/reuters").generate_preprocessed_documents()
        newsgroups_corpus = Preprocessor("./datasets/20newsgroups").generate_preprocessed_documents()

        # initialize all models for each corpus and an ADR system
        # cranfield
        bm_cranfield = BooleanModel(cranfield_corpus)
        vsm_cranfield = VectorSpaceModel(cranfield_corpus)
        gvsm_cranfield = GeneralizedVectorSpaceModel(cranfield_corpus)
        # cranfield adr
        self.cranfield_adr = AdrRetrievalSystem(cranfield_corpus, models=[bm_cranfield, vsm_cranfield, gvsm_cranfield])

        # reuters
        bm_reuters = BooleanModel(reuters_corpus)
        vsm_reuters = VectorSpaceModel(reuters_corpus)
        gvsm_reuters = GeneralizedVectorSpaceModel(reuters_corpus)
        # reuters adr
        self.reuters_adr = AdrRetrievalSystem(reuters_corpus, models=[bm_reuters, vsm_reuters, gvsm_reuters])

        # newsgroups
        bm_newsgroups = BooleanModel(newsgroups_corpus)
        vsm_newsgroups = VectorSpaceModel(newsgroups_corpus)
        gvsm_newsgroups = GeneralizedVectorSpaceModel(newsgroups_corpus)
        # newsgroups adr
        self.newsgroups_adr = AdrRetrievalSystem(newsgroups_corpus, models=[bm_newsgroups, vsm_newsgroups, gvsm_newsgroups])

    def search_button(self):
        """
            This method executes the logic for search button.
            Given a dataset, a model and a number of files to recover this method displays on search
            results table the corresponding query result
        """
        # set other buttons as not enable
        self.set_enable_main_window(False)

        # set initial time
        start_time = time.time()
        self.responseTimeLabel.setText("0 secs")

        number_of_documents_to_retrieve = self.noDocsSpinBox.value() # number of documents to retrieve

        # check search bar is not empty
        if self.searchBar.text() == '':
            QtWidgets.QMessageBox.about(self.searchButton, 'Invalid Query String', 'Invalid query string, cannot be empty')
            self.set_enable_main_window(True)
            return

        query_string = self.searchBar.text()

        # check if dataset is offline or online. There must be exactly one type selected
        if (self.offlineRadioButton.isChecked() and self.onlineRadioButton.isChecked()) or (not self.offlineRadioButton.isChecked() and not self.onlineRadioButton.isChecked()):
            QtWidgets.QMessageBox.about(self.searchButton, 'Invalid Selection', 'Invalid selection between offline and online search')
            self.clean_dataset_selection()
            self.set_enable_main_window(True)
            return
        
        adr_system = None # adr system to use
        # offline dataset case
        if self.offlineRadioButton.isChecked():
            dataset_name = self.offlineDatasetsComboBox.currentText()
            adr_system = self.cranfield_adr if dataset_name == 'Cranfield' else (self.reuters_adr if dataset_name == 'Reuters' else self.newsgroups_adr) # ADR System to use

        # online dataset case (crawler)
        elif self.onlineRadioButton.isChecked():
            if self.urlCrawlerLineEdit.text() != '':
                dataset_url = self.urlCrawlerLineEdit.text()
                no_pages = self.noPagesCrawlerSpinBox.value()

                try:
                    online_corpus = Crawler(dataset_url, no_pages).get_documents() # get corpus from online search
                    online_bm = BooleanModel(online_corpus)
                    online_vsm = VectorSpaceModel(online_corpus)
                    online_gvsm = GeneralizedVectorSpaceModel(online_corpus)
                    adr_system = AdrRetrievalSystem(online_corpus, [online_bm, online_vsm, online_gvsm])
                except:
                    QtWidgets.QMessageBox.about(self.searchButton, 'Online Search Error', 'Please check if you have permission to that url or if you are connected to the Internet')
                    self.set_enable_main_window(True)
                    return
                    
        # check the model selected
        model_name = self.modelComboBox.currentText().replace(' ', '') # get model name

        # make the query from search bar for the given a dataset, a model and an amount of elements to retrieve
        query_response = None
        self.searchResultsTable.clearContents()
        try: # make query
            query_response = adr_system.k_documents_query_model(query_string, model_name, number_of_documents_to_retrieve)
            self.searchResultsTable.setRowCount(len(query_response))
            self.searchResultsTable.setColumnCount(3)
            # put the results on the search table and show elapsed time response
            for index in range(len(query_response)):
                self.searchResultsTable.setItem(index, 0, QtWidgets.QTableWidgetItem(str(query_response[index][1].id))) # set id
                self.searchResultsTable.setItem(index, 1, QtWidgets.QTableWidgetItem("{0:.6f}".format(query_response[index][0]))) # set sim
                self.searchResultsTable.setItem(index, 2, QtWidgets.QTableWidgetItem(str(query_response[index][1].url))) # set url

        except:
            QtWidgets.QMessageBox.about(self.searchButton, 'Internal Model Error', 'Internal model error')
            self.searchBar.setText('')
            self.searchBar.clear()
            self.searchResultsTable.clearContents() # clear all elements

        # set end time to elapsed time label
        end_time = time.time() - start_time
        self.responseTimeLabel.setText("{:.2f} secs".format(end_time))

        # at the end of the end of the method make buttons enable to users
        self.set_enable_main_window(True)

    def expand_query_button(self):
        """
            This method executes the logic for expand query.
            When executed, the search bar would be changed to a more
            specific query expanding the terms used
        """
        # set other buttons as not enable
        self.set_enable_main_window(False)

        # check if search query is valid
        query_string = self.searchBar.text()
        if query_string == '':
            QtWidgets.QMessageBox.about(self.searchButton, 'Invalid Query String', 'Invalid query string, cannot be empty')
            self.set_enable_main_window(True)
            return

        # generate the expanded query string given an initial query string
        new_words = query_expansion_by_synonyms(query_string)
        for word in new_words: # add new words to the query
            query_string = query_string + ' ' + word

        # set new query string into line edit recommendation
        self.queryExpandedLineEdit.clear()
        self.queryExpandedLineEdit.setText(query_string)

        # at the end of the end of the method make buttons enable to users
        self.set_enable_main_window(True)

    def calculate_metrics_button(self):
        """
            This method calculates the metrics using the
            values from the spin buttons for RR, REC, REL
            and RRD.
        """
        # set other buttons as not enable
        self.set_enable_main_window(False)

        # check if spin boxes for main sets are valid
        RR = self.RRSpinBox.value()
        REC = self.RECSpinBox.value()
        REL = self.RELSpinBox.value()
        RRD = self.RRDSpinBox.value()

        valid_inputs = (RRD <= RR and RR > 0 and REC > 0 and REL > 0 and REC >= RR and REL >= RR)

        # calculate metrics updating the corresponding labels
        if not valid_inputs:
            # show error message to user
            QtWidgets.QMessageBox.about(self.metricsButton, 'Arithmetic Error', 'Possible division by zero or non sense operation')
            # clean metrics
            self.clean_metrics()

        else:
            metrics = self.cranfield_adr.get_metrics(RR, REC, REL, RRD) # get metrics dict
            # update corresponding labels
            self.precisionLabel.setText("Precision: {0:.2f}".format(metrics['precision']))
            self.recallLabel.setText("Recall: {0:.2f}".format(metrics['recall']))
            self.fscoreLabel.setText("F-Score: {0:.2f}".format(metrics['f_score']))
            self.f1scoreLabel.setText("F1-Score: {0:.2f}".format(metrics['f1_score']))
            self.rprecisionLabel.setText("R-Precision: {0:.2f}".format(metrics['r_precision']))
            self.noveltyRatioLabel.setText("Novelty Ratio: {0:.2f}".format(metrics['novelty_ratio']))

        # at the end of the end of the method make buttons enable to users
        self.set_enable_main_window(True)

    def set_enable_main_window(self, is_enable):
        """
            This method is used for enable and disable the
            main buttons in the gui by using is_enable bool value
        """
        self.ADRGroupBox.setEnabled(is_enable)

    def clean_metrics(self):
        """
            This method is used for cleaning all values
            on metrics group box
        """
        self.RRSpinBox.setValue(0)
        self.RRDSpinBox.setValue(0)
        self.RECSpinBox.setValue(0)
        self.RELSpinBox.setValue(0)

    def clean_dataset_selection(self):
        """
            Method for cleaning dataset selection
        """
        self.offlineRadioButton.setChecked(False)
        self.onlineRadioButton.setChecked(False)

# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
